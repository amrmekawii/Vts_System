@using Microsoft.AspNetCore.Builder;
@using Microsoft.AspNetCore.Localization;
@using Microsoft.AspNetCore.Http.Features;
@using Microsoft.AspNetCore.Mvc.Localization;
@using Microsoft.Extensions.Options;
@inject IViewLocalizer localizer
@inject IOptions<RequestLocalizationOptions> locOptions;
@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = locOptions.Value.SupportedUICultures.
    Select(c => new SelectListItem { Value = c.Name, Text = c.NativeName }).ToList();
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
}

<div title="@localizer["Request culture provider :"]@requestCulture?.Provider?.GetType().Name">
    <form id="selectLanguage" asp-controller="Items" asp-action="SetLanguage" asp-route-returnUrl="@returnUrl">
        <select class="form-select-sm" name="culture" onchange="this.form.submit();"asp-for="@requestCulture.RequestCulture.UICulture.Name"
        asp-items="cultureItems"></select>
    </form>
</div>
@*<select class="form-select" aria-label="Default select example">
  <option selected>Open this select menu</option>
  <option value="1">One</option>
  <option value="2">Two</option>
  <option value="3">Three</option>
</select>*@